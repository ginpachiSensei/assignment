{
	"info": {
		"_postman_id": "7c4a5dc6-ed33-46f2-9f90-d1ff45b3bc6c",
		"name": "assign",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17884516"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "POST user login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\" : \"admin@example.com\",\r\n    \"password\":\"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/users/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"login"
							]
						},
						"description": "used to login. here the login system creates a new user in the database and genereates jwt for it which is stored as barer_token environment variable"
					},
					"response": []
				},
				{
					"name": "POST add song to like ",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/api/users/like/:music id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"like",
								":music id"
							],
							"variable": [
								{
									"key": "music id",
									"value": null
								}
							]
						},
						"description": "This route takes in the music id of the song that is to be set in the like of the specific user accessed through barer_token"
					},
					"response": []
				},
				{
					"name": "GET all liked songs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/users/like",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"like"
							]
						},
						"description": "This route returns all the song present in like of specific user accessed though bearer_token"
					},
					"response": []
				},
				{
					"name": "POST add song to dislike",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/api/users/dislike/634c7c71dd46eb5b2764aebc",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"dislike",
								"634c7c71dd46eb5b2764aebc"
							]
						},
						"description": "this route takes in music id of the song that is added to dislike section of the specific user passed though bearer_token"
					},
					"response": []
				},
				{
					"name": "GET all disliked songs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/users/dislike",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"dislike"
							]
						},
						"description": "This route returns all the songs in the dislike secion of user passed though bearer_token"
					},
					"response": []
				}
			]
		},
		{
			"name": "music",
			"item": [
				{
					"name": "GET all music",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"satyam@example.com\",\r\n    \"password\": \"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/music/",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"music",
								""
							]
						},
						"description": "This route returns all the songs present in the database"
					},
					"response": []
				},
				{
					"name": "POST create music",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"sample tile3\",\r\n    \"artist\":\"sample artist\",\r\n    \"album\":\"sample album\",\r\n    \"description\":\"sample\",\r\n    \"genere\":\"genere\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/music/",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"music",
								""
							]
						},
						"description": "This request takes song object with parameters\n\n{\n\ntitle,\n\nartist,\n\nalbum.\n\nStartFragment\n\ndescription\n\nEndFragment\n\ngenre\n\n}\n\nand creates a new song in the database"
					},
					"response": []
				},
				{
					"name": "DELETE music by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/music/:music id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"music",
								":music id"
							],
							"variable": [
								{
									"key": "music id",
									"value": null
								}
							]
						},
						"description": "This route takes in the music id and deletes the specific song from database"
					},
					"response": []
				},
				{
					"name": "GET music by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/music/634c7df185c097567739668e",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"music",
								"634c7df185c097567739668e"
							]
						},
						"description": "This route takes in the id of the specific music and return the contents of music from database"
					},
					"response": []
				},
				{
					"name": "PUT update music",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"not sample\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/music/634c7df185c097567739668e",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"music",
								"634c7df185c097567739668e"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}